
metrics4j {
	#_dump-file: "dump.conf"
	plugins {
		jmx: {
			_class: "org.kairosdb.metrics4j.plugins.JMXReporter"
		}
	}

	collectors {
		counter: {
			_class: "org.kairosdb.metrics4j.collectors.impl.LongCounter"
			reset: true
		}
		lastTime: {
			_class: "org.kairosdb.metrics4j.collectors.impl.LastTime"
			report-unit: "MILLIS"
		}
	}

	formatters {
		template: {
			_class: "org.kairosdb.metrics4j.formatters.TemplateFormatter"
			template: "kafka_monitor.%{metricName}"
		}
	}

	sinks {
		kairos-telnet: {
			_class: "org.kairosdb.metrics4j.sinks.TelnetSink"
			host: "kairos-server"
			port: 4242
			resolution: "MILLISECONDS"
		}
	}

	triggers {
		//Topic monitor uses an internal trigger to report metrics
	}
	sources {

		_collector: ["counter", "lastTime"]
		_formatter: "template"
		_sink: "kairos-telnet"

		org {
			kairosdb {
				kafka {
					monitor {
						ConsumerStats {
							consumeCount {
								_metric-name: "consumer_count"
							}
							gatherFailure {
								_metric-name: "gather_failure"
							}
							groupLag {
								_metric-name: "group_lag"
							}
							groupTimeToProcess {
								_metric-name: "group_time_to_process"
							}
							offsetAge {
								_metric-name: "offset_age"
							}
							offsetGatherTime {
								_metric-name: "offset_gather_time"
							}
							partitionLag {
								_metric-name: "partition_lag"
							}
							produceCount {
								_metric-name: "produce_count"
							}
							stalePartitions {
								_metric-name: "stale_partitions"
							}
						}

						MonitorStats {
							partitionedOffsetsRead {
								_metric-name: "partitioned_offsets_read"
							}
							rawOffsetsRead {
								_metric-name: "raw_offsets_read"
							}
						}
					}
				}
			}
		}
	}

}
